{
  name = fragmentsHandler
  # Configuration used to create io.knotx.fragments.handler.options.FragmentsHandlerOptions.
  config {
    # Fragment configuration key that defines what task to apply to the fragment. Default value
    # is data-knotx-task.
    #
    # taskKey = data-knotx-task

    # Sets the module into the debug mode. If set to true, each fragment will display its original
    # content and data when request contains 'debug' param.
    # debugMode = true

    # Map of Tasks definitions where key is task name and value is graph configuration.
    tasks {
      # Task name that can be used in fragments
      default {
        # Task is a graph of Actions. Each Action defines transitions to react to the response.
        action = databridge
        onTransitions {
          # When Action ends correctly and no custom Transition is set.
          _success {
            action = te
          }
          # When Action throws an exception.
          #
          # _error {
          #   action = fallback
          # }
        }
      }
    }

    # Map of Actions definitions where key is Action name and value is Action factory configuration.
    actions {
      # Action name that can be used in task configuration
      databridge {
        factory = knot
        config {
          address = "knotx.knot.databridge"
          deliveryOptions {
            sendTimeout = 1000
          }
        }
      }
      # Template Engine action
      te {
        factory = "knot"
        config {
          address = "knotx.knot.te"
          deliveryOptions {
            sendTimeout = 1000
          }
        }
      }
    }
  }
}